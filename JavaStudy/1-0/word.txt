1.IT
  1.1 IT
    Information Technologyの略称で、情報技術という意味。インターネット通信技術やコンピュータを利用した情報処理などを含む。
  1.2 ICT
    Information and Communication Technologyの略称。ITと置き換えてもほとんど相違はないが、コミュニケーションの意味合いが含まれ、SNSなども含めた人と人とが繋がる技術のことをさす。
  1.3 IoT
    Internet of Thingsの略称。コンピュータや携帯電話・スマホだけでなく身の回りのあらゆるもの（家電など）がインターネットに繋がっている仕組みのこと。

2.OS
  2.1 OS
    Operating Systemの略称。アプリケーションやデバイスを動かす基本のソフトウェア。ハードウェアからの入力情報をアプリケーションに伝達したり、ソフトウェアとハードウェアの連携を司るなど中枢の役割を果たす。
  2.2 Windows
    Operating Systemの中でもMicrosoftが提供しているOS。
  2.3 macOS(Mac OS X)
    Operating Systemの中でもAppleが提供しているMacのOS。
  2.4 UNIX
    現存するOSでも最も古く、特にカーナビや携帯電話などで今でも使われている。他のOSと異なる点は、CUIではなくGUIを採用している点。
  2.5 LINUX
    UNIXと互換性の高いUNIX系OS。オープンソースソフトウェアとして広く公開されている点がUNIXと異なる点であり、誰でも無料で使用することができる。そのため、世界中のエンジニアが日々改良を行うことができ、ネットワークセキュリティの分野で優れ、非常に安定しているという特徴を持つ。

3.言語・環境
  3.1 マークアップ/フロントエンド
        ユーザが見ている画面のデザインを表示させたり、情報をサーバに送るなどの役割
    3.1.1 HTML
        Hyper Text Markup Languageの略称。ウェブページを作成するために開発された言語。
    3.1.2 CSS
        Cascading Style Sheetの略称。ウェブページのスタイルやデザインを指定するための言語。
    3.1.3 JavaScript
        動的なウェブページを作成することができるプログラミング言語。動きのあるコンテンツを作成できる言語。
  3.2 サーバーサイド
        フロントエンドに指定された適切な情報を送る役割
    3.2.1 .NET(C#, VB)
            microsoft社が開発したWindows系のシステム開発で使用されているシステム基盤。
    3.2.2 Java 
            世界的に多く使用されている言語。OSに依存せず、安定して動作する。
    3.2.3 Perl
            テキスト処理が得意なスクリプト言語。処理速度が比較的に速い。
    3.2.4 PHP
            動的にWebページを作ることができるサーバーサイドのスクリプト言語。他のプログラミング言語と比較すると仕様や文法が簡単で、習得しやすいと言われている。
    3.2.5 Ruby
            日本人のまつもとゆきひろ氏によって開発されたオブジェクト指向スクリプト言語。「継承」が特徴で、書くコードの量が少なく、読みやすく作業効率も高い。

4.サーバーソフト
  4.1 Apache
    全世界の約半分を占めるサーバーソフトウェア。
  4.2 nginx
    Apacheが大量の同時アクセスに対処しきれない問題を解決するために開発されたサーバーソフトウェア。
  4.3 IIS
    Internet Information Servicesの略称。Microsoftが開発したサーバーソフトウェアでApacheと二大巨頭。

5.SQL
  5.1 SQL  
        Structured Query Languageの略称。データベースとやり取りをする際に用いる言語。
    5.1.1 DB2
            IBM社が提供しているデータベース管理システムの総称。
    5.2.2 MySQL, Maria DB
            世界中で使用されているデータベース管理システム。大容量のデータも高速に動作する。
    5.2.3 Oracle DB
            オラクル社が開発・提供しているデータベース管理システムの総称。
    5.2.4 PostgreSQL
            Linux,macOS,windowsまで幅広く対応するオープンソースのデータベース管理システム。
    5.2.5 SQLite
            オープンソースで軽量・簡易型のデータベース管理システム。サーバーとしてではなくアプリケーションに組み込んで利用する。
    5.2.6 SQL Server
            microsoftが開発した、WindowsOSで動作するデータベース管理システム。
  5.2 CRUD
        データを操作する際の登録機能（Create）、参照機能（Read）、変更機能（Update）、削除機能（Delete)をまとめて表現した言葉。
  5.3 トランザクション
        例えば金融機関のコンピュータシステムにおける入出金処理のように、一連の作業を一つの処理として管理すること。
    5.3.1 コミット
    5.3.2 ロールバック
  5.4 排他制御
        同時に複数のユーザがアクセスできるファイルやデータベースにおいて、データの整合性を保つために一人のユーザが処理をしている間に他ユーザのアクセスを制限すること。
    5.4.1 楽観ロック
        他者との同時アクセスは滅多に起きないであろうという前提の排他制御のこと。
    5.4.2 悲観ロック
        他者との同時アクセスが頻繁に想定される前提の排他制御のこと。
  5.5 実行計画
        SQLを実行するための計画。どうしたらより効率的にSQLを実行できるかを計算し、導き出された方法を計画としてまとめたもの。
  5.6 チューニング
        システムやプログラムなどを改良しパフォーマンスの向上を図ること。
  5.7 パフォーマンス
        コンピュータなどの機器やソフトウェア、システムなどあらゆる処理の性能や速度・容量のこと。
  5.8 スロークエリ
        データベースにおいて、処理に時間のかかっているSQLのこと。
  5.9 クエリログ
        クライアントから実行された全てのSQLクエリを出力してくれるログのこと。
  5.10 IDE（統合開発環境）
        Integrated Development Environmentの略称。かつてはテキストエディタ、コンパイラ、デバッガなどそれぞれ開発に必要なツールをバラバラに使用していた物を、効率よく開発をするために一つにまとめたもの。
    5.10.1 Eclipse
        IDEの一つで、オープンソフトウェア。主にJavaの開発環境として使用されており、導入すればすぐにJavaの開発が行える。
    5.10.2 NetBeans
        同じくJavaの開発環境として広く使用されているオープンソースのIDE。
    5.10.3 Spring ToolSuite
        STSはEclipseをベースとしてSpring開発に必要なものを組み込んだパッケージ。Eclipseは、Spring ToolSuiteの一部とも言える。
  5.11 DBツール
    5.11.1 A5;SQL Mk-2
            複雑化するデータベース開発を支援するために開発されたフリーのSQL開発ツール。
    5.11.2 pgAdmin
            GUIによるPostgreSQLの管理ツール。
    5.11.3 DBeaver
            Oracle,SQLServer,PostgreSQL,MySQLなどに対応したSQLクライアントツール。
    5.11.4 MySQL Workbench
            MySQLの公式サイトで配布されている、データベースの設計・開発・管理を一元化しているツール。
    5.11.5 Sequel Pro
            Mac用のMySQLのデータをGUIで管理するためのアプリケーション。
    5.11.6 TeamSQL
            完全無料でデータベースをGUIで管理するためのアプリケーション。

6.肩書
  6.1 PM
        Project Managerの略称。プロジェクト全体を管理する責任者のことで、プロジェクトがスムーズに進行するようにマネジメントを行い、プロジェクトの成功を導く役割。
  6.2 PL 
        Project Leaderの略称。PMの下位というわけではなく、PMとは別の役割。プロジェクトリーダーは、プロジェクト全体の管理というよりも、チームの管理を行い引っ張っていく役割。マネジメント能力だけでなくITの深い知識も求められる。
  6.3 PG
        Programmerの略称。SEの作成した仕様書に基づいて実際にプログラミングを行う役割。
  6.4 SE
        System Engineerの略称。プログラムの要件定義から仕様書の作成、コーディング、テストまでシステム開発案件の全体に関わる役割。
  6.5 デザイナー
        案件の中でもデザインを手がける役割。
  6.6 エンジニア
    6.6.1 フロントエンド・エンジニア
        ユーザーの目に触れる部分を担当するエンジニア。WebデザイナーのようにUIやUXの部分まで任せられることもあり、幅広い知識が求められる場合もある。
    6.6.2 サーバーサイド・エンジニア
        バックエンド・エンジニアと同義で使用されることが多い。ユーザーが目にする部分を実装するフロントエンドとは違い、サーバー側で動作するシステム構築やデータベースの環境整備などを幅広く行うエンジニアのこと。
    6.6.3 バックエンド・エンジニア 
        サーバーサイド・エンジニアと同義で使用されることが多い。以上同。
7.UI
  7.1 UI
        User interfaceの略称。ユーザーと、製品やサービスとの接点全てのことを意味する。キーボードやマウスの操作性なども含まれるが、Webサイトの見た目や使いやすさのことをさすことが多い。
    7.1.1 CUI
        Character User Interfaceの略称。macであればターミナルを立ち上げると表示される、テキストデータのみで表現されているUIのこと。エンジニアには使いやすいが、馴染みのない不慣れな人には使いづらいUI。
    7.1.2 GUI
        Graphical User Interfaceの略称。CUIとは異なり誰が見てもわかりやすいように、アプリケーションやフォルダなどが全てアイコンなどで表示されており直感的に操作がわかりやすいUIのこと。
8.ファイル/ディレクトリ
  8.1 ファイル
        データの管理における最小の単位。
  8.2 拡張子
        ファイルの種類を表し識別させるためにファイル名の末尾につけられる文字列のこと。
  8.3 ディレクトリ
        フォルダともいう。データ管理の最小単位であるファイルをわかりやすく管理するための箱のようなもの。複数のファイルを分類・管理することが容易にできる。
    8.3.1 ルート・ディレクトリ
        位置的に階層のもっとも上位にあるディレクトリのこと。ルートディレクトリより上の階層のディレクトリは存在しない。
    8.3.2 カレント・ディレクトリ
        ユーザが現在作業をしているディレクトリのこと。
  8.4 パス
    8.4.1 絶対パス
        フルパスともいう。ルートディレクトリから目的のディレクトリ・ファイルまでの経路を表すpathのこと。
    8.4.2 相対パス
        ユーザが現在作業しているディレクトリから見た目的のディレクトリ・ファイルまでの経路を表すpathのこと。

9.ネットワーク
  9.1 LAN
        Local Area Networkの略称で、簡単に言えば近くて狭いネットワーク。物理的に線でつなぐことができる範囲で実現されるものであり、地域限定型のグループ。
  9.2 WAN
        Wide Area Networkの略称で、簡単に言えば遠くて広いネットワーク。物理的に線でつなぐことができないほどの距離で、電話回線や専用回線を用いて繋がっているネットワークのこと。
  9.3 クライアント
        Webブラウザ。情報を入力してデータを検索したり、データやサービスを利用するコンピュータのこと。
  9.4 サーバー
        Webブラウザからデータやコンテンツを閲覧できる状態にしてくれる、サービスを提供するコンピュータのこと。

10.各種プロトコル
        プロトコル＝通信を行う際の共通のルールのこと。
  10.1 HTTP 
        Hyper Text Transfer Protocolの略称。HTMLなどのコンテンツの送受信に用いられている。
  10.2 FTP
        File Transfer Protocolも略称。ファイルを転送するための通信プロトコルで、ファイルを送受信するための仕組み。
  10.3 HTTPS
        Hyper Text Transfer Service Secureの略称。基本的な概要はhttpと変わらないが、SSL/TLSプロトコルを用いて行われるhttp通信のことで、暗号化されておりセキュリティ的に信頼性の高い通信ができる。
  10.4 SSL
        Secure Sockets Layerの略称で、送受信しているデータを暗号化する仕組み。URLがhttpsから始まっているものや、URLアドレスの横に鍵のマークが表示されているものはSSL化された通信。
  10.5 SSH
        Secure Shellの略称。ネットワークに接続された機器を遠隔操作し、管理するための手段。安全に通信をするための仕組み。
        サーバーはユーザから物理的に離れた場所にあるため、操作をする人だけが安全にインターネット経由で接続できる手段が必要となる。
        パスワード認証方式と、公開鍵認証方式の２種類の方法がある。
  10.6 ポート、ポート番号
        ポートとは、ネットワークでデータ通信をするための扉のようなもの。利用するプログラムの種類によってポートが異なる。
        IPアドレスを住所に例えるならば、ポート番号は部屋の番号のようなもの。
        プロトコル、IPアドレス、ポート番号＝「どのような方法で」「どこ」の「何号室」と通信をするのか、のように言い換えることができる。
  10.7 HTTP,FTP,SSHの各ポート番号
        HTTP：TCP 80
        FTP：TCP 20（データ）か21（制御）
        SSH：TCP 22
  10.8 ファイアウォール
        インターネットを通して侵入する不正なアクセスを防ぐための防火壁。ネットワークの発達により内部データの盗聴や改ざんなどの不正アクセスを行うことが容易になったことで誕生した高度なセキュリティシステム。
        送られてくるパケット（データの塊）の情報から接続を許可するかどうかを判断し、不正アクセスと判断された場合は管理人に通報できるように設計されている。
  10.9 TCP
        Transmission Control Protocolの略称。信頼性の高い通信を実現するために使用されるプロトコル。ただ、速度が若干遅い。

11.IPアドレス
        Internet Protocol Addressの略称。インターネット上に接続された機器が持つナンバーのこと。
        データをやりとりする際にその通信相手を間違わないようにするために使われる住所のようなもの。
        「000.00.00.00」のように数字で構成されている。
  11.1 IPアドレス
    11.1.1 グローバルIPアドレス
        インターネットを利用する際に割り当てられるIPアドレスのこと。
    11.1.2 プライベートIPアドレス
        インターネットのようなグローバルなものではなくしゃないLANなどの小規模なネットワークで使用されるいPアドレスのこと。
12.ドメイン
  12.1 ドメイン
        ドメインもWebサイトがどこにあるかを判別するための住所のようなもの。
        IPアドレスと紐づけられているが、数字で構成されており覚えにくくわかりにくいためドメイン名に変換してWebサイトの場所を示す。
  12.2 DNS
        Domain Name Systemの略称。インターネット上のドメインを管理・運用するために開発されたシステム。
        IPアドレスではわかりにくいため、人間がより覚えやすく使いやすい「名前」で指定できるようにするための仕組み。
  12.3 VPN
        Virtual Private Networkの略称。インターネット上に仮想のプライベートネットワーク（専用線）をもうけ、セキュリティ上の安全な経路を使いデータのやり取りをする技術。
        これまでは物理的な専用回線やSSLなどを用いていたが、より効率的にアプリケーションを問わずに安全に通信をするために開発された。
  12.4 ブリッジ
        受信したデータの交通整備員のような役割をする中継機器。次にデータをどこに引き渡すのかを表すMACアドレスを参照して中継の可否を判断する機能を持つ。
  12.5 プロキシサーバー
        インターネットに直接接続できないコンピュータに代わり、インターネットに接続してWebサイトへのアクセスなどを行うサーバーのこと。

13.電子メール
  13.1 SMTP
        Simple Mail Transfer Protocolの略称。メールを相手のメールサーバーまで届ける（送信する）仕組み。
  13.1 POP
        Post Office Protocolの略称。メール受信の際に必要となる仕組み。
  13.1 IMAP
        Internet Message Access Protocolの略称。POPと同じくメールを取り込むための仕組みだが、POPメールサーバーがサーバーからメールをダウンロードする必要があるのに対し、
        IMAPサーバーを利用すると受信者はダウンロードする必要なく、メールサーバーに保存したままの状態でメールを受信することができる。

14.セッションとクッキー
  14.1 セッション
        通信の開始から終了までのこと。
  14.2 クッキー
        ホームページを訪問したユーザーの情報を一時的に保存する仕組みと、そのデータのこと。
        ショッピングサイトなどに訪問したときにすでにログイン状態になっていたりカートに商品がそのまま残っているのはクッキー機能の一例。
  14.3 キャッシュ
        閲覧したWebページの情報を一時的に保存する機能。クッキーがIDやパスワードなどのユーザー自身がブラウザに入力した情報を保存するのに対し、
        キャッシュはユーザが見たホームページの情報を保存する。

15.DBについて
  15.1 インデックス
        DBに置いて、テーブルの情報を探すときに検索対象としてよく使用するカラムの値だけを取り出して検索しやすいようにしたもの。

16.テストについて
  16.1 フロー
        プログラムを構成する命令や手続き、処理の流れなどのこと。

17.チケット管理ツール
        ＝タスク管理ツールのこと。
  17.1 タスク
        コンピュータが処理するプログラムの処理単位のこと。

18.バージョン管理
        一つのファイルやその集合に対して加えられていく変更を記録すること。
  18.1 Git
        分散型のバージョン管理システム。ファイルのバージョン管理が簡単にできるツールのこと。
        コンピュータ上でファイルの編集履歴を管理できる。
  18.1 SVN
        Subversionの略称。集中型でオープンソースのバージョン管理システム。
  18.1 デグレ
        degradeの略称。システム開発において、プログラム修正や変更などにより、これまで正常に動作していた処理や機能が動かなくなるという品質低下のトラブルのこと。
  18.1 マージツール
        マージとはバージョン管理システムなどで管理している開発中のプログラムに対して新しいコードを追加したり修正を反映させたりする操作のことであり、
        マージツールはマージに使う方法のこと。


